
prompt_git() {
	local s='';
	local branch='';

	# Check if the current directory is in a Git repository.
	if [ $(git rev-parse --is-inside-work-tree &>/dev/null; echo "${?}") == '0' ]; then
		# Get the short symbolic ref. If HEAD isnâ€™t a symbolic ref,
		# get the short SHA for the latest commit, otherwise just give up.
		branch="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
			git rev-parse --short HEAD 2> /dev/null || echo '(unknown)')";

		# check if the current directory is in .git before running git checks
		if [ "$(git rev-parse --is-inside-git-dir 2> /dev/null)" == 'false' ]; then
			# Ensure the index is up to date.
			git update-index --really-refresh -q &>/dev/null;
			# Check for uncommitted changes in the index.
			if ! $(git diff --quiet --ignore-submodules --cached); then s+='+'; fi;
			# Check for unstaged changes.
			if ! $(git diff-files --quiet --ignore-submodules --); then s+='!'; fi;
			# Check for untracked files.
			if [ -n "$(git ls-files --others --exclude-standard)" ]; then s+='?'; fi;
			# Check for stashed files.
			if $(git rev-parse --verify refs/stash &>/dev/null); then s+='$'; fi;
		fi;

		[ -n "${s}" ] && s="[${s}]";
		echo -e " (${branch}${s})";
	else
		return;
	fi;
}

# Set the terminal title to the current working directory.
export PS1="\u@\h:\w\$(prompt_git) => "
